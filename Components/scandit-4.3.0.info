{"Name":"Scandit Barcode Scanner SDK","Id":1395,"Alias":"scandit","Description":"Scandit Barcode Scanner\n=======================\n\n**Enterprise-Grade Barcode Scanning for your Mobile App**\n\nScandit\u0027s lightning-fast and accurate Barcode Scanner is a valuable addition to any enterprise application. Our Xamarin component utilizes our unique blurry barcode scan technology that works across platforms to scan any barcode type from any angle.  \n\nPricing\n-------\n\n\n### Enterprise Edition(s)\n\nStarting at $199/month\nIncludes:\n\n* Support for UPC-A, EAN13, EAN8, UPC-E, Code39, Code93, Code128, Codabar, MSI Plessey, ITF (2 of 5), GS1 Databar, QR, Datamatrix, PDF417 (incl. Truncated PDF417) and Aztec codes.\n* Variable device limits with unlimited scans\n* Premium support with response time of 48hr or less\n* Access to our Product API featuring over 25M UPCs\n\n**Register for a free Test SDK and get your App Key on our [pricing page](http://www.scandit.com/pricing/).**\n\n\nFeatures and Benefits\n---------------------\n\n#### Lightning-Fast Scanning from any Angle\n\nOur scan technology can capture barcodes before the camera focuses, from any angle, creating an amazingly fast and pleasant user experience.\n\n#### Supports all major 1D and 2D code types\n\nOur barcode scanner module supports UPC-A, EAN13, EAN8, UPC-E, Code39, Code93, Code128, Codabar, MSI Plessey, ITF (2 of 5), GS1 Databar, QR, Datamatrix, PDF417 (incl. Truncated PDF417) and Aztec codes.\n\n#### Support for devices lacking autofocus\n\nOur barcode scanner module works for a wide range of low-end devices that lack autofocus capabilities, and thereby significantly expands the addressable market for your app.\n\nExample\n-------\n\nIntegrating the Scandit SDK into your Xamarin app is very straightforward:\n\niOS:\n\n```csharp\n// Setup the barcode scanner\nvar picker = new ScanditSDK.SIBarcodePicker (\"---- ENTER YOUR APP KEY HERE ----\");\npicker.OverlayController.Delegate = new YourDelegate ();\n\n// Display the Scandit user interface\nsome_ui_view_controller_object.PresentViewController (picker, true, null);\n\npicker.StartScanning ();\n```\n\n```csharp\nusing ScanditSDK;\n\npublic class YourDelegate : SIOverlayControllerDelegate\n{\n\tpublic override void DidScanBarcode (SIOverlayController overlayController, NSDictionary barcode) {\n\t\t// perform actions after a barcode was scanned\n\t\t);\n\t}\n}\n```\n\n\nAndroid:\n\n```csharp\n\npublic class ScanActivity : Activity, Scandit.Interfaces.IScanditSDKListener\n\t{\n\t\tprivate ScanditSDKBarcodePicker picker;\n\t\tpublic static string appKey = \"---- ENTER YOUR APP KEY HERE ----\";\n\n\t\tprotected override void OnCreate (Bundle bundle)\n\t\t{\n\t\t\tbase.OnCreate (bundle);\n\n\t\t\t// Setup the barcode scanner\n\t\t\tpicker = new ScanditSDKBarcodePicker (this, appKey);\n\t\t\tpicker.OverlayView.AddListener (this);\n\n\t\t\t// Start scanning\n\t\t\tpicker.StartScanning ();\n\n\t\t\t// Show scan user interface\n\t\t\tSetContentView (picker);\n\t\t}\n\n\t\tpublic void DidScanBarcode (string barcode, string symbology) {\n\t\t\tConsole.WriteLine (\"barcode scanned: {0}, \u0027{1}\u0027\", symbology, barcode);\n\n\t\tpublic void DidCancel () {\n\t\t\tConsole.WriteLine (\"Cancel was pressed.\");\n\t\t}\n\n\t\tpublic void DidManualSearch (string text) {\n\t\t\tConsole.WriteLine (\"Search was used.\");\n\t\t}\n}\n```\n\nMore information\n----------------\n\nFor more details, check out the demo project that comes with the Scandit SDK Xamarin component.\n\nFurther information is also available at [www.scandit.com/support](http://www.scandit.com/support).\n\n\nSupport\n-------\n\nQuestions? Contact us at `info@scandit.com`.\n\n\n\n","Version":"4.3.0","Summary":"Enterprise-Grade Barcode Scanning for your Mobile App","QuickStart":"Scandit SDK Barcode Scanner\n===========================================\n\nUsing the Scandit SDK Barcode Scanner component in your Xamarin app is as simple as:\n\n* downloading and installing the component\n* signing up for an API key at http://www.scandit.com (free for the enterprise trial)\n* integrating the Scandit SDK component into your app by implementing the callbacks for successful scans and instantiating the ScanditSDKBarcodePicker as shown in the example code below.\n\nInstall the Scandit SDK component\n---------------------------------\n\nAdd the Scandit Barcode Scanner to your project via the Component Manager.\n\nGet an Scandit SDK App Key\n--------------------------\n\n[Sign up](http://www.scandit.com/pricing) for a free enterprise trial license and copy your app key from within your Scandit web account.\n\n\niOS: Integrate the Scandit SDK into Your iOS App\n---------------------------------------\n\nTo handle the callbacks when a barcode is scanned or the user presses the cancel button, one of the classes in your app needs to implement the ScanditSDK.SIOverlayControllerDelegate interface:\n\n```csharp\nusing ScanditSDK;\n\npublic class YourDelegate : SIOverlayControllerDelegate\n{\n\tpublic override void DidScanBarcode (SIOverlayController overlayController, NSDictionary barcode) {\n\t\t// perform actions after a barcode was scanned\n\t\tConsole.WriteLine (\"barcode scanned: {0}, \u0027{1}\u0027\", barcode[\"symbology\"], barcode[\"barcode\"]);\n\t}\n\n\tpublic override void DidCancel (SIOverlayController overlayController, NSDictionary status) {\n\t\t// perform actions after cancel was pressed\n\t}\n\n\tpublic override void DidManualSearch (SIOverlayController overlayController, string text) {\n\t\t// perform actions after search was used\n\t}\n}\n```\n\nTo start the Scandit SDK Barcode Scanner, instantiate the ScanditSDK.SIBarcodePicker object, set the delegate and present the scan view.\n\nMake sure you pass the APP key from your Scandit account to the ScanditSDK.SIBarcodePicker object.\n\n\n```csharp\n// Setup the barcode scanner\nvar picker = new ScanditSDK.SIBarcodePicker (\"ENTER YOUR APP KEY HERE\");\npicker.OverlayController.Delegate = new YourDelegate ();\n\n// Display the Scandit user interface\nsome_ui_view_controller_object.PresentViewController (picker, true, null);\n\npicker.StartScanning ();\n```\n\nAndroid: Integrate the Scandit SDK into Your Android App\n---------------------------------------\n\nInstantiate the ScanditSDKBarcodePicker, start the scanner, show the scan user interface and handle the callbacks of the Scandit.Interfaces.IScanditSDKListener interface and add permissions for CAMERA, INTERNET and VIBRATE.\n\n```csharp\n\npublic class ScanActivity : Activity, Scandit.Interfaces.IScanditSDKListener\n\t{\n\t\tprivate ScanditSDKBarcodePicker picker;\n\t\tpublic static string appKey = \"---- ENTER YOUR APP KEY HERE - SIGN UP AT WWW.SCANDIT.COM ----\";\n\n\t\tprotected override void OnCreate (Bundle bundle)\n\t\t{\n\t\t\tbase.OnCreate (bundle);\n\n\t\t\t// Setup the barcode scanner\n\t\t\tpicker = new ScanditSDKBarcodePicker (this, appKey);\n\t\t\tpicker.OverlayView.AddListener (this);\n\n\t\t\t// Start scanning\n\t\t\tpicker.StartScanning ();\n\n\t\t\t// Show scan user interface\n\t\t\tSetContentView (picker);\n\t\t}\n\n\t\tpublic void DidScanBarcode (string barcode, string symbology) {\n\t\t\tConsole.WriteLine (\"barcode scanned: {0}, \u0027{1}\u0027\", symbology, barcode);\n\n\t\tpublic void DidCancel () {\n\t\t\tConsole.WriteLine (\"Cancel was pressed.\");\n\t\t}\n\n\t\tpublic void DidManualSearch (string text) {\n\t\t\tConsole.WriteLine (\"Search was used.\");\n\t\t}\n}\n```\n\nNote: Do not forget to add permissions in the Android manifest file for CAMERA, INTERNET and VIBRATE.\n\n\n\nMore information\n----------------\n\nFor more details, check out the sample projects that come with the Scandit SDK component.\n\nDetailed guides and API information is available at [www.scandit.com/support](http://www.scandit.com/support).\n\n\nSupport\n-------\n\nQuestions? Contact `info@scandit.com`.\n","Hash":"3f079ad979009d325b604fab5d5f4f85","TargetPlatforms":["ios","android"],"TrialHash":null}